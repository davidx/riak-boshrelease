#!/bin/bash

# Control script to start/stop ruby/rack riak job on a BOSH controlled VM

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables
set +x

RIAK_DEV_N="$2"
if [[ ! -x /var/vcap/packages/riak/dev$RIAK_DEV_N/bin/riak ]]
then
  echo riak_dev_ctl: Invalid or missing argument: $2
  exit 1
fi

# Setup env vars and folders for the monit script
source /var/vcap/jobs/riak-dev/helpers/ctl_setup.sh 'riak-dev'
redirect_output "riak-dev-$RIAK_DEV_N"
PIDFILE=$RUN_DIR/riak-$RIAK_DEV_N.pid

STORE=/var/vcap/store/riak-dev

case $1 in

  start)
    pid_guard $PIDFILE "riak-$RIAK_DEV_N"

    # https://wiki.basho.com/Building-a-Development-Environment.html
    echo Starting riak-dev$RIAK_DEV_N
    /var/vcap/packages/riak/dev$RIAK_DEV_N/bin/riak start >>$LOG_DIR/riak-dev$RIAK_DEV_N.stdout.log 2>>$LOG_DIR/riak-dev$RIAK_DEV_N.stderr.log

    # run 'raik-admin status' until it doesn't say 'Node is not running!'
    for (( i = 0; i < 10; i++ ))
    do
      status=$(/var/vcap/packages/riak/dev$RIAK_DEV_N/bin/riak-admin status)
      if [[ "${status}" = 'Node is not running!' ]]
      then
        sleep 1;
      else
        echo "${status}"
        break;
      fi
    done

    # get pid of erlang beam process
    pid=$(ps ax | grep "/var/vcap/packages/riak/dev$RIAK_DEV_N/.*/bin/beam" | grep -v grep | awk '{ print $1 }')
    echo "${pid}" > $PIDFILE
    
    if [[ "$RIAK_DEV_N" = 1 ]]
    then
      echo Joining dev1 -> dev2
      /var/vcap/packages/riak/dev1/bin/riak-admin cluster join dev2@127.0.0.1
      echo Joining dev1 -> dev3
      /var/vcap/packages/riak/dev1/bin/riak-admin cluster join dev3@127.0.0.1
      echo Joining dev1 -> dev4
      /var/vcap/packages/riak/dev1/bin/riak-admin cluster join dev4@127.0.0.1
    fi
    ;;

  stop)
    echo Stopping riak-dev$RIAK_DEV_N
    kill_and_wait $PIDFILE
    ;;

  logs)
    cat $LOG_DIR/*
    ;;

  tail)
    tail -f $LOG_DIR/*
    ;;

  clearlogs)
    rm $LOG_DIR/*
    ;;

  *)
  echo "Usage: riak_ctl {start|stop|logs|tail|clearlogs}" ;;
esac
exit 0
