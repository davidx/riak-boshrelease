#!/bin/bash

# Control script to start/stop ruby/rack riak job on a BOSH controlled VM

RUN_DIR=/var/vcap/sys/run/riak-dev
LOG_DIR=/var/vcap/sys/log/riak-dev
STORE=/var/vcap/store/riak-dev

RIAK_DEV_N="$2"
if [[ ! -x /var/vcap/packages/riak/dev$RIAK_DEV_N/bin/riak ]]
then
  echo riak_dev_ctl: Invalid or missing argument: $2
  exit 1
fi
PIDFILE=$RUN_DIR/riak-$RIAK_DEV_N.pid

source /var/vcap/packages/common/utils.sh
redirect_output "riak-dev-$RIAK_DEV_N"

export HOME=/var/vcap

case $1 in

  start)
    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    mkdir -p $STORE

    # riak installation needs erlang binaries
    PATH=/var/vcap/packages/erlang/bin:$PATH
    
    # https://wiki.basho.com/Building-a-Development-Environment.html
    echo Starting riak-dev$RIAK_DEV_N
    /var/vcap/packages/riak/dev$RIAK_DEV_N/bin/riak start >>$LOG_DIR/riak-dev$RIAK_DEV_N.stdout.log 2>>$LOG_DIR/riak-dev$RIAK_DEV_N.stderr.log

    # run 'raik-admin status' until it doesn't say 'Node is not running!'
    for (( i = 0; i < 10; i++ ))
    do
      status=$(/var/vcap/packages/riak/dev$RIAK_DEV_N/bin/riak-admin status)
      if [[ "${status}" = 'Node is not running!' ]]
      then
        echo "${status}"
        break;
      fi
      sleep 1;
    done

    # get pid of erlang beam process
    pid=$(ps ax | grep "/var/vcap/packages/riak/dev$RIAK_DEV_N/.*/bin/beam" | grep -v grep | awk '{ print $1 }')
    echo "${pid}" > $PIDFILE
    
    # /var/vcap/packages/riak/dev$RIAK_DEV_N/**/bin/beam
    
    # wait for all nodes to start
    sleep 5
    
    if [[ "$RIAK_DEV_N" = 1 ]]
    then
      echo Joining dev2 -> dev1
      /var/vcap/packages/riak/dev2/bin/riak-admin join dev1@127.0.0.1
      echo Joining dev3 -> dev1
      /var/vcap/packages/riak/dev3/bin/riak-admin join dev1@127.0.0.1
      echo Joining dev4 -> dev1
      /var/vcap/packages/riak/dev4/bin/riak-admin join dev1@127.0.0.1
    fi
    ;;

  stop)
    echo Stopping riak-dev$RIAK_DEV_N
    /var/vcap/packages/riak/dev$RIAK_DEV_N/bin/riak stop >>$LOG_DIR/riak-dev$RIAK_DEV_N.stdout.log 2>>$LOG_DIR/riak-dev$RIAK_DEV_N.stderr.log
    rm $PIDFILE
    ;;

  logs)
    cat $LOG_DIR/*
    ;;

  tail)
    tail -f $LOG_DIR/*
    ;;

  clearlogs)
    rm $LOG_DIR/*
    ;;

  *)
  echo "Usage: riak_ctl {start|stop|logs|tail|clearlogs}" ;;
esac
exit 0
